1. A C program contains the following declaration 
float table[2][3] = { { 1.1,1.2,1.3},{2.1,2.2,2.3}};
a) What is the meaning of a table?
->Base address of the array table[2][3]
b) What is the meaning of (table+1)?
->Address of the 1st row of the table 
c) What is the meaning of *(table+1)?
->Address pointing to the 1st row 0th col of the table
d) What is the meaning of (*(table+1)+1)?
->Address pointing to the 1st row 1st element of the table
e) What is the meaning of (*(table)+1)?
->Adress pointing to the 0th row 1st element of the table
f) What is the value of *(*(table+1) +1)?
->value at table[1][1] i.e 2.2
g) What is the value of *(*(table)+1)?
->value at table[0][1] i.e 1.2
h) What is the value of *(*(table+1))?
value at table[1][0] i.e 2.1
i) What is the value of *(*(table) + 1)+1?
->value at table[0][1]+1 i.e 1.2+1=2.2

//program

#include<stdio.h>
int main()
{
	float table[2][3] = { { 1.1,1.2,1.3},{2.1,2.2,2.3} };
	printf("%d\n", table);
	printf("%d\n", (table + 1));
	printf("%d\n", *(table + 1));
	printf("%d\n", (*(table + 1) + 1));
	printf("%d\n", (*(table)+1));
	printf("%f\n", *(*(table + 1) + 1));
	printf("%f\n", *(*(table)+1));
	printf("%f\n", *(*(table + 1)));
	printf("%f\n", *(*(table)+1) + 1);
	return 0;
} 